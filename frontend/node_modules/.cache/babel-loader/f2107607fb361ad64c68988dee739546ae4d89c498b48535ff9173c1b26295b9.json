{"ast":null,"code":"var _jsxFileName = \"/Users/florasoler/my-app/src/components/Collapse/Collapse.jsx\",\n  _s = $RefreshSig$();\n//Import tools\nimport React, { useState, useRef } from 'react';\n\n//Import image\nimport toggleArrow from '../../assets/chevron-solid.svg';\n\n// Import styles\nimport './collapse.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Collapse({\n  title,\n  content\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState('');\n  /* This is setting the initial height of the collapse to 0px. */\n  const [setHeight, setHeightState] = useState('0px');\n  /* This is setting the initial state of the rotate class. */\n  const [setRotate, setRotateState] = useState('collapse-icon');\n\n  /* This is setting the contentCollapse to a ref. This is used to get the height of the content. */\n  const contentCollapse = useRef(null);\n\n  /**\n   * The function toggles the collapse by changing the active state, the height state, and the rotate\n   * state\n   */\n  const toggleCollapse = () => {\n    setIsOpen(isOpen === '' ? 'active' : '');\n    setHeightState(isOpen === 'active' ? '0px' : `${contentCollapse.current.scrollHeight}px`);\n    setRotateState(isOpen === 'active' ? 'collapse-icon' : 'collapse-icon rotate');\n  };\n\n  /* This is a way to check if the content is an array or not. If it is not an array, it will push the\n  content into the contentArray. If it is an array, it will loop through the array and push each item into\n  the contentArray. */\n  const contentArray = [];\n  if (!Array.isArray(content)) {\n    contentArray.push(content);\n  } else {\n    for (let i = 0; i < 9; i++) {\n      contentArray.push(content[i]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collapse-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `collapse ${isOpen}`,\n      onClick: toggleCollapse,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"collapse-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: toggleArrow,\n        className: `${setRotate}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentCollapse,\n      style: {\n        maxHeight: `${setHeight}`\n      },\n      className: \"collapse-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse-text\",\n        children: contentArray.map((content, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: content\n        }, `${content}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n_s(Collapse, \"TaGK82k1qcuWy+nWG4XLktw/jz0=\");\n_c = Collapse;\nexport default Collapse;\nvar _c;\n$RefreshReg$(_c, \"Collapse\");","map":{"version":3,"names":["React","useState","useRef","toggleArrow","jsxDEV","_jsxDEV","Collapse","title","content","_s","isOpen","setIsOpen","setHeight","setHeightState","setRotate","setRotateState","contentCollapse","toggleCollapse","current","scrollHeight","contentArray","Array","isArray","push","i","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","ref","style","maxHeight","map","index","_c","$RefreshReg$"],"sources":["/Users/florasoler/my-app/src/components/Collapse/Collapse.jsx"],"sourcesContent":["//Import tools\nimport React, { useState, useRef } from 'react'\n\n//Import image\nimport toggleArrow from '../../assets/chevron-solid.svg'\n\n// Import styles\nimport './collapse.scss';\n\nfunction Collapse({ title, content }) {\n\tconst [isOpen, setIsOpen] = useState('')\n\t/* This is setting the initial height of the collapse to 0px. */\n\tconst [setHeight, setHeightState] = useState('0px')\n\t/* This is setting the initial state of the rotate class. */\n\tconst [setRotate, setRotateState] = useState('collapse-icon')\n\n\t/* This is setting the contentCollapse to a ref. This is used to get the height of the content. */\n\tconst contentCollapse = useRef(null)\n\n\t/**\n\t * The function toggles the collapse by changing the active state, the height state, and the rotate\n\t * state\n\t */\n\tconst toggleCollapse = () => {\n\t\tsetIsOpen(isOpen === '' ? 'active' : '')\n\t\tsetHeightState(\n\t\t\tisOpen === 'active'\n\t\t\t\t? '0px'\n\t\t\t\t: `${contentCollapse.current.scrollHeight}px`\n\t\t)\n\t\tsetRotateState(\n\t\t\tisOpen === 'active' ? 'collapse-icon' : 'collapse-icon rotate'\n\t\t)\n\t}\n\n\t/* This is a way to check if the content is an array or not. If it is not an array, it will push the\n\tcontent into the contentArray. If it is an array, it will loop through the array and push each item into\n\tthe contentArray. */\n\tconst contentArray = []\n\tif (!Array.isArray(content)) {\n\t\tcontentArray.push(content)\n\t} else {\n\t\tfor (let i = 0; i < 9; i++) {\n\t\t\tcontentArray.push(content[i])\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"collapse-section\">\n\t\t\t{/* This is the button that is used to toggle the collapse. */}\n\t\t\t<button\n\t\t\t\tclassName={`collapse ${isOpen}`}\n\t\t\t\tonClick={toggleCollapse}\n\t\t\t>\n\t\t\t\t<span className=\"collapse-title\">{title}</span>\n\t\t\t\t<img src={toggleArrow} className={`${setRotate}`} alt=\"\" />\n\t\t\t</button>\n\t\t\t<div\n\t\t\t\tref={contentCollapse}\n\t\t\t\tstyle={{ maxHeight: `${setHeight}` }}\n\t\t\t\tclassName=\"collapse-content\"\n\t\t\t>\n\t\t\t\t<div className=\"collapse-text\">\n\t\t\t\t\t{contentArray.map((content, index) => (\n\t\t\t\t\t\t<div key={`${content}-${index}`}>{content}</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Collapse"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}