{"ast":null,"code":"var _jsxFileName = \"/Users/florasoler/Portfolio 3/frontend/src/components/Cv/Cv.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./cv.scss\";\n\n// Path to the image in the 'src/assets' folder\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst imagePath = require('../../assets/CV_SOLER_2024_Accenture.jpg');\nfunction CvPreview() {\n  _s();\n  // State variable for managing zoomed image\n  const [zoomedImage, setZoomedImage] = useState(null);\n\n  // Function to open zoomed image\n  const openZoomedImage = () => {\n    setZoomedImage(imagePath); // Set the zoomed image to the imported image path\n  };\n\n  // Function to close zoomed image\n  const closeZoomedImage = () => {\n    setZoomedImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: openZoomedImage,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePath // Use the correct path to display the image\n        ,\n        alt: \"CV Preview\",\n        width: 300 // Adjust the width as needed\n        ,\n        style: {\n          objectFit: \"cover\"\n        } // Apply the objectFit style directly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), zoomedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zoomed-image-container\",\n      onClick: closeZoomedImage,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: zoomedImage,\n        alt: \"zoomed-image\",\n        style: {\n          width: \"100%\",\n          height: \"auto\",\n          objectFit: \"contain\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(CvPreview, \"PB7XL1lRbrcPHiEwqzomyau0Qso=\");\n_c = CvPreview;\nexport default CvPreview;\nvar _c;\n$RefreshReg$(_c, \"CvPreview\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","imagePath","require","CvPreview","_s","zoomedImage","setZoomedImage","openZoomedImage","closeZoomedImage","children","onClick","src","alt","width","style","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","className","height","_c","$RefreshReg$"],"sources":["/Users/florasoler/Portfolio 3/frontend/src/components/Cv/Cv.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./cv.scss\";\n\n// Path to the image in the 'src/assets' folder\nconst imagePath = require('../../assets/CV_SOLER_2024_Accenture.jpg');\n\nfunction CvPreview() {\n  // State variable for managing zoomed image\n  const [zoomedImage, setZoomedImage] = useState(null);\n\n  // Function to open zoomed image\n  const openZoomedImage = () => {\n    setZoomedImage(imagePath);  // Set the zoomed image to the imported image path\n  };\n\n  // Function to close zoomed image\n  const closeZoomedImage = () => {\n    setZoomedImage(null);\n  };\n\n  return (\n    <>\n      {/* Render the clickable image */}\n      <div onClick={openZoomedImage}>\n        <img\n          src={imagePath}  // Use the correct path to display the image\n          alt=\"CV Preview\"\n          width={300}  // Adjust the width as needed\n          style={{ objectFit: \"cover\" }}  // Apply the objectFit style directly\n        />\n      </div>\n\n      {/* Render the zoomed image */}\n      {zoomedImage && (\n        <div className=\"zoomed-image-container\" onClick={closeZoomedImage}>\n          <img\n            src={zoomedImage}\n            alt=\"zoomed-image\"\n            style={{ width: \"100%\", height: \"auto\", objectFit: \"contain\" }}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default CvPreview;\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,0CAA0C,CAAC;AAErE,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5BD,cAAc,CAACL,SAAS,CAAC,CAAC,CAAE;EAC9B,CAAC;;EAED;EACA,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBAEEX,OAAA;MAAKY,OAAO,EAAEH,eAAgB;MAAAE,QAAA,eAC5BX,OAAA;QACEa,GAAG,EAAEV,SAAU,CAAE;QAAA;QACjBW,GAAG,EAAC,YAAY;QAChBC,KAAK,EAAE,GAAI,CAAE;QAAA;QACbC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAQ,CAAE,CAAE;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLd,WAAW,iBACVP,OAAA;MAAKsB,SAAS,EAAC,wBAAwB;MAACV,OAAO,EAAEF,gBAAiB;MAAAC,QAAA,eAChEX,OAAA;QACEa,GAAG,EAAEN,WAAY;QACjBO,GAAG,EAAC,cAAc;QAClBE,KAAK,EAAE;UAAED,KAAK,EAAE,MAAM;UAAEQ,MAAM,EAAE,MAAM;UAAEN,SAAS,EAAE;QAAU;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA,eACD,CAAC;AAEP;AAACf,EAAA,CAtCQD,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAwClB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}